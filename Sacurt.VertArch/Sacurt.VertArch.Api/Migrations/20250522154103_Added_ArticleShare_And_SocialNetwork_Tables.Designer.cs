// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sacurt.VertArch.Api.Database;

#nullable disable

namespace Sacurt.VertArch.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522154103_Added_ArticleShare_And_SocialNetwork_Tables")]
    partial class Added_ArticleShare_And_SocialNetwork_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sacurt.VertArch.Api.Database.Entities.ArticleShare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SharedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SocialNetworkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SocialNetworkId");

                    b.ToTable("ArticleShares");
                });

            modelBuilder.Entity("Sacurt.VertArch.Api.Database.Entities.SocialNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialNetwork");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Twitter / X"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Instagram"
                        },
                        new
                        {
                            Id = 4,
                            Name = "LinkedIn"
                        });
                });

            modelBuilder.Entity("Sacurt.VertArch.Api.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublishedOnUtc")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Sacurt.VertArch.Api.Database.Entities.ArticleShare", b =>
                {
                    b.HasOne("Sacurt.VertArch.Api.Database.Entities.SocialNetwork", "SocialNetwork")
                        .WithMany()
                        .HasForeignKey("SocialNetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocialNetwork");
                });
#pragma warning restore 612, 618
        }
    }
}
